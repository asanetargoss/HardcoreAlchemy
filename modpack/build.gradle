// Begin Minecraft Forge plugin setup
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://maven.minecraftforge.net"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
// End Minecraft Forge plugin setup


// Project settings
version = "0.6.1"
group= "targoss.hardcorealchemy.modpack"
archivesBaseName = "hardcorealchemy_modpack"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so Eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.10.2-12.18.3.2511"
    runDir = "run"
    
    mappings = "stable_29"
    
    replace "@HARDCORE_ALCHEMY_MODPACK_VERSION@", project.version
    replaceIn "HardcoreAlchemyModpack.java"
    replace "\"required-before:\" + HardcoreAlchemy.MOD_ID", "\"required-before:\" + HardcoreAlchemy.MOD_ID + \"@[\" + HardcoreAlchemy.VERSION + \"]\""
    replace "\"required-after:\" + HardcoreAlchemyTweaks.MOD_ID", "\"required-after:\" + HardcoreAlchemyTweaks.MOD_ID + \"@[\" + HardcoreAlchemyTweaks.VERSION + \"]\""
    replace "\"required-after:\" + HardcoreAlchemyCreatures.MOD_ID", "\"required-after:\" + HardcoreAlchemyCreatures.MOD_ID + \"@[\" + HardcoreAlchemyCreatures.VERSION + \"]\""
    replace "\"required-after:\" + HardcoreAlchemyMagic.MOD_ID", "\"required-after:\" + HardcoreAlchemyMagic.MOD_ID + \"@[\" + HardcoreAlchemyMagic.VERSION + \"]\""
    replace "\"required-after:\" + HardcoreAlchemySurvival.MOD_ID", "\"required-after:\" + HardcoreAlchemySurvival.MOD_ID + \"@[\" + HardcoreAlchemySurvival.VERSION + \"]\""
    replaceIn "HardcoreAlchemyModpack.java"

    clientJvmArgs += [
        "-Dfml.coreMods.load=" +
        "targoss.hardcorealchemy.coremod.HardcoreAlchemyCoremod," +
        "targoss.hardcorealchemy.tweaks.coremod.HardcoreAlchemyTweaksCoremod," +
        "targoss.hardcorealchemy.creatures.coremod.HardcoreAlchemyCreaturesCoremod," +
        "targoss.hardcorealchemy.magic.coremod.HardcoreAlchemyMagicCoremod," +
        "targoss.hardcorealchemy.survival.coremod.HardcoreAlchemySurvivalCoremod"
    ]
    serverJvmArgs += [
        "-Dfml.coreMods.load=" +
        "targoss.hardcorealchemy.coremod.HardcoreAlchemyCoremod," +
        "targoss.hardcorealchemy.tweaks.coremod.HardcoreAlchemyTweaksCoremod," +
        "targoss.hardcorealchemy.creatures.coremod.HardcoreAlchemyCreaturesCoremod," +
        "targoss.hardcorealchemy.magic.coremod.HardcoreAlchemyMagicCoremod," +
        "targoss.hardcorealchemy.survival.coremod.HardcoreAlchemySurvivalCoremod"
    ]
}

dependencies {
    compileOnly project(":core")
    compileOnly project(":tweaks")
    compileOnly project(":creatures")
    compileOnly project(":magic")
    compileOnly project(":survival")
    compileOnly fileTree(dir: "../compilelibs/core", include: "**/*.jar")
    compileOnly fileTree(dir: "../compilelibs/tweaks", include: "**/*.jar")
    compileOnly fileTree(dir: "../compilelibs/creatures", include: "**/*.jar")
    compileOnly fileTree(dir: "../compilelibs/magic", include: "**/*.jar")
    compileOnly fileTree(dir: "../compilelibs/survival", include: "**/*.jar")
}

sourceSets.main.resources.srcDirs += ["../translations/modpack"]

processResources
{
    // This will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // Replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // Replace version and mcversion with the settings we've defined for our project
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // Copy everything else that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Run configs are shared between submods
task setupRunConfig(type: Copy) {
    from "../testconfig"
    into "run/config"
}
setupDecompWorkspace.dependsOn setupRunConfig

// Hack to inherit access transformers from core, so the decompiled Minecraft jar that this subproject depends on is effectively the same as the one in core.
task copyAccessTransformerFromCore(type: Copy) {
    from "../core/src/main/resources/META-INF/hardcorealchemy_at.cfg"
    into "src/main/resources/META-INF"
}
setupDecompWorkspace.dependsOn copyAccessTransformerFromCore
processResources.dependsOn copyAccessTransformerFromCore
